* <2017-05-03>
** Fait:
   - Flot continue d'octets
** A faire:
   - S'assurer de la reconnection automatique quand le téléphone
     se met en veille
   - Sérialiser le graphe intelligemment
   - https://developer.android.com/reference/android/media/AudioTrack.html
   - Corriger la couche de communication
   - Faire une démo avec un envoi "continu" d'octets avec une mesure
     du nombre d'octets envoyés par seconde.
   - Faire une demo ou on produit un son "simple" et on le joue de
     l'autre côté.

* <2017-04-19>
** Fait:
   - Centraliser le graphe sur le serveur
   - Faire que chaque client dise régulièrement au serveur qu'il est bien
     là et quels sont ses voisins dans le graphe.
   - Début d'implémentation pour la transmission d'un flot de bytes

** A faire:
   - Sérialiser le graphe intelligemment
   - https://developer.android.com/reference/android/media/AudioTrack.html
   - Corriger la couche de communication
   - Faire une démo avec un envoi "continu" d'octets avec une mesure
     du nombre d'octets envoyés par seconde.
   - Faire une demo ou on produit un son "simple" et on le joue de
     l'autre côté.

* <2017-03-23>
** Fait:
   - Mise à jour de l'interface graphique
   - Evaluation TarsosDSP: ne sait pas jouer du son
   - Une première version de la couche de communication mais
     l'implémentation est "étrange" (passage par une string
     intermédiaire!)
** A faire:
   - Centraliser le graphe sur le serveur
   - Faire que chaque client dise régulièrement au serveur qu'il est bien
     là et quels sont ses voisins dans le graphe.
   - https://developer.android.com/reference/android/media/AudioTrack.html
   - Corriger la couche de communication
   - Faire une démo avec un envoi "continu" d'octets avec une mesure
     du nombre d'octets envoyés par seconde.
   - Faire une demo ou on produit un son "simple" et on le joue de
     l'autre côté.

* <2017-03-01>
** Fait:
   - "Update" supprimer
   - Evaluer quelques solutions audios mais pas concluant
** A faire:
   - Avoir une architecture propre pour bien l'identification
     séparer des autres utilisateurs et les widgets.
   - Avoir une vue globale du circuit
   - Evaluer TarsosDSP
   - Faire une nouvelle version ou chaque client stream
     une alternance de deux octets choisis aleatoirement
     et affiche les streams des autres clients.
   - JE VEUX UNE DEMO!

* <2017-02-08>
** Fait:
   - Un demo avec du texte! Bravo!
** A faire:
   - Supprimer "update", utiliser des notifications?
   - Indiquer qui on écoute
   - Avoir une vue globale du circuit
   - Faire une étude comparative des bibliothèques de
     streaming et/ou traitements sonores en Java
* <2017-02-01>
** Fait:
   - Passage à HTTP
   - Dockerfile
** A faire:
   - Demo!
* <2017-01-25>
** Fait:
   - A essayer de programmer un client HTTP à la main.
** A faire:
   - Regarder HTTP pour de vrai
   - Authentification sérieuse
   - on ne doit pas pouvoir déconnecter un autre client que soi-même
   - éclaircir l'usage des différents ports
   - passer à HTTP(S)
   - une version de l'application avec du texte plutôt que du son.
   - une vidéo de démonstration
   - démonstration en live
* <2016-12-09>
** Fait:
   - sur le serveur d'annuaire : fait un protocole raisonnable.
   - sur l'UI : un premier proto sans table de mixage avec un
     menu à gauche et à droite
   - docker
** A faire:
   - on ne doit pas pouvoir déconnecter un autre client que soi-même
   - éclaircir l'usage des différents ports
   - passer à HTTP
   - une version de l'application avec du texte plutôt que du son.
   - une vidéo de démonstration
   - démonstration en live
* <2016-11-18>
** Fait:
   - changé la spécification de l'UI
** A faire:
   - Réseau : client/serveur où le serveur est annuaire des noeuds et des groupes
   - UI : une première mouture
   - Comment connaître les noeuds écoutés par un noeud donné?
   - Serveur déployé via docker
* <2016-10-21>
** Faire:
   - une première spec fonctionnelle raisonnable
** A faire:
   - revoir la spécification pour généraliser la notion de noeud.
   - revoir l'interface pour uniformiser la visualisation d'un noeud
     (qu'il appartienne ou pas à l'utilisateur)
   - prototype

* ven. sep 23, 2016  13:30
** A faire:
   - Spécification fonctionnelle (que doit faire l'application)
   - Planning (diagramme de Gantt)

* Ven  7 oct 2016 11:52:45 CEST
	- A FAIRE : spécifier le projet de diffusion/écoute/mélange de sources sonores sur mobile
